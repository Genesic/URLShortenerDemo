// Code generated by MockGen. DO NOT EDIT.
// Source: module.go

// Package redirectController is a generated GoMock package.
package redirectController

import (
	errors "URLShortenerDemo/pkg/errors"
	database "URLShortenerDemo/service/database"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	gorm "gorm.io/gorm"
)

// MockIHash is a mock of IHash interface.
type MockIHash struct {
	ctrl     *gomock.Controller
	recorder *MockIHashMockRecorder
}

// MockIHashMockRecorder is the mock recorder for MockIHash.
type MockIHashMockRecorder struct {
	mock *MockIHash
}

// NewMockIHash creates a new mock instance.
func NewMockIHash(ctrl *gomock.Controller) *MockIHash {
	mock := &MockIHash{ctrl: ctrl}
	mock.recorder = &MockIHashMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHash) EXPECT() *MockIHashMockRecorder {
	return m.recorder
}

// ShortenIDtoID mocks base method.
func (m *MockIHash) UrlIDtoID(shortenID string) (uint, *errors.ServiceError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UrlIDtoID", shortenID)
	ret0, _ := ret[0].(uint)
	ret1, _ := ret[1].(*errors.ServiceError)
	return ret0, ret1
}

// ShortenIDtoID indicates an expected call of ShortenIDtoID.
func (mr *MockIHashMockRecorder) ShortenIDtoID(shortenID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UrlIDtoID", reflect.TypeOf((*MockIHash)(nil).UrlIDtoID), shortenID)
}

// MockIUrl is a mock of IUrl interface.
type MockIUrl struct {
	ctrl     *gomock.Controller
	recorder *MockIUrlMockRecorder
}

// MockIUrlMockRecorder is the mock recorder for MockIUrl.
type MockIUrlMockRecorder struct {
	mock *MockIUrl
}

// NewMockIUrl creates a new mock instance.
func NewMockIUrl(ctrl *gomock.Controller) *MockIUrl {
	mock := &MockIUrl{ctrl: ctrl}
	mock.recorder = &MockIUrlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIUrl) EXPECT() *MockIUrlMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockIUrl) Get(tx *gorm.DB, id uint) (*database.Url, *errors.ServiceError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", tx, id)
	ret0, _ := ret[0].(*database.Url)
	ret1, _ := ret[1].(*errors.ServiceError)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockIUrlMockRecorder) Get(tx, id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockIUrl)(nil).Get), tx, id)
}
